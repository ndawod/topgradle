/*
 * MIT License
 *
 * Copyright (c) 2022 Noor Dawod
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

/**
 * A task to create a ProjectVersion.kt file in the main source directory of the project.
 * The resulting ProjectVersion.kt file should be pushed to git repo.
 */
project.ext.generateProjectVersionKtSource = {
    def outputDir = (new File("$buildDir/../src/main/kotlin")).canonicalFile
    def projectGroupDir = project.group.toString().replace('.', '/')
    def srcFile = new File(outputDir, "$projectGroupDir/ProjectVersion.kt")
    def parentDir = srcFile.parentFile

    parentDir.mkdirs()
    if (!parentDir.isDirectory()) {
        throw new RuntimeException("Unable to create directory: $outputDir")
    }

    def output = """// AUTO-GENERATED; DO NOT EDIT, BUT DO PUSH TO VCS!

@file:Suppress("unused", "MaxLineLength")

package ${project.group}

/**
 * Project `${project.group}` version: ${project.version}
 */
const val PROJECT_VERSION: String = "$project.version"
"""

    srcFile.write(output)
}

// When building the project, the ProjectVersion.kt file will be created.
compileJava.dependsOn {
    doFirst {
        project.generateProjectVersionKtSource()
    }
}
compileKotlin.dependsOn {
    doFirst {
        project.generateProjectVersionKtSource()
    }
}
classes.dependsOn {
    doFirst {
        project.generateProjectVersionKtSource()
    }
}
allprojects { project.generateProjectVersionKtSource() }
